<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if not audio_is_playing(bgm_main) {
    audio_play_sound(bgm_main,1,true);
}

instance_create(0,0,obj_whiteoverlay);

outline1y=0;
outline2y=0;
created=false;
canfade=true;
blackalph=1;
boggleappear=0;

bogglescale=1;
rollindex=0;
circlescale=0;
circlealpha=1;
canscale=false;
hasrolled=0;

dice1=-1;
dice2=-1;

boggling=false
boggled=false;

canstar=0;

for (var i=0; i&lt;25 i++) {
    spots[i+1]=-1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_rivalpiece</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>320</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>180</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_playerpiece</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>320</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>180</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_sound_gain(bgm_main,0,500);

if obj_varhold.p_pos=obj_varhold.r_pos {
    inst=instance_create(0,0,obj_fadeout);
    inst.alarm[0]=30;
    inst.roomto=roo_rivalconv;
} else if obj_varhold.p_pos=(1||2||6||7||11||12||16||17||21||22) {
    inst=instance_create(0,0,obj_fadeout);
    inst.alarm[0]=30;
    inst.roomto=roo_noconv;
} else if obj_varhold.p_pos=(3||4||5) {
    inst=instance_create(0,0,obj_fadeout);
    inst.alarm[0]=30;
    inst.roomto=roo_oldconv;
} else if obj_varhold.p_pos=(8||9||10) {
    inst=instance_create(0,0,obj_fadeout);
    inst.alarm[0]=30;
    inst.roomto=roo_businessconv;
} else if obj_varhold.p_pos=(13||14||15) {
    inst=instance_create(0,0,obj_fadeout);
    inst.alarm[0]=30;
    inst.roomto=roo_ownerconv;
} else if obj_varhold.p_pos=(18||19||20) {
    inst=instance_create(0,0,obj_fadeout);
    inst.alarm[0]=30;
    inst.roomto=roo_buffconv;
} else if obj_varhold.p_pos=(23||24||25) {
    inst=instance_create(0,0,obj_fadeout);
    inst.alarm[0]=30;
    inst.roomto=roo_frogconv;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_varhold.r_pos+=irandom_range(1,6)+irandom_range(1,6);

if obj_varhold.r_pos&gt;25 {
    obj_varhold.r_pos-=25;
}

alarm[2]=120;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_varhold.p_pos+=dice1.image_index+dice2.image_index+2;

if obj_varhold.p_pos&gt;25 {
    obj_varhold.p_pos-=25;
}

alarm[1]=60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if canfade=true {
    blackalph=lerp(blackalph,0,0.1);
    outline1y=lerp(outline1y,-720,0.05);
}

if outline1y&lt;-360 {
    outline2y=lerp(outline2y,-720,0.05);
}

if outline2y&lt;-700 {
    if created=false {
        for (var i=0; i&lt;25; i++) {
            spots[i+1]=instance_create(320+lengthdir_x(128,360/25*i+90),180+lengthdir_y(128,360/25*i+90),obj_board);
            spots[i+1].image_index=i;
            spots[i+1].alarm[0]=i*5+1
        }
        created=true;
        alarm[8]=20;
        alarm[9]=20;
    }
}
if outline2y&lt;-715 {
    if boggleappear&lt;11 {
    boggleappear+=0.5;
    }
}

if boggleappear&gt;8 &amp;&amp; boggled=false {
    canstar+=0.1;
    
    if floor(canstar)=canstar {
        inst=instance_create(irandom_range(312-64,312+64),irandom_range(172-64,172+64),obj_stars);
        inst.image_blend=c_yellow;
        inst.direction=point_direction(312,172,inst.x,inst.y);
        inst.speed=irandom_range(15,25)/10;
    }
    if ((mouse_x&gt;312-64) &amp;&amp; (mouse_y&gt;172-64) &amp;&amp; (mouse_x&lt;312+64) &amp;&amp; (mouse_y&lt;172+64) &amp;&amp; (mouse_check_button(mb_left))) || (keyboard_check(vk_space)) {
        bogglescale=lerp(bogglescale,0.95,0.05);
    } else {
        bogglescale=lerp(bogglescale,1,0.1);
    }
    if mouse_check_button_released(mb_left) || keyboard_check_released(vk_space) {
        bogglescale=1.2
        boggling=true
        circlealpha=1;
        var diceroll1=irandom_range(1,6);
        var diceroll2=irandom_range(1,6);
        dice1=instance_create(312+irandom_range(-32,0),172+irandom_range(-32,32),obj_dice);
        dice1.visible=false;
        dice1.image_index=diceroll1-1;
        dice1.image_angle=irandom_range(0,359);
        dice2=instance_create(312+irandom_range(0,32),172+irandom_range(-32,32),obj_dice);
        dice2.visible=false;
        dice2.image_index=diceroll2-1;
        dice2.image_angle=irandom_range(0,359);
        alarm[0]=240;
    }
    if not mouse_check_button(mb_left) and not keyboard_check(vk_space) {
        bogglescale=lerp(bogglescale,1,0.1);
    }
}

if boggling=true {
    if rollindex&lt;6 {
        rollindex+=0.25
    } else {
        rollindex=0
        hasrolled+=1;
    }
    if hasrolled &gt;=3 {
        canscale=true
    }
    if canscale=true {
        circlescale=lerp(circlescale,640,0.1);
    }
}

if circlescale&gt;635 {
    boggling=false;
    boggled=true;
    circlealpha=lerp(circlealpha,0,0.1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);
draw_set_color(c_white);
draw_sprite(spr_boardoutline2,0,0,outline2y);
draw_sprite(spr_boardoutline1,0,0,outline1y);

if boggleappear&gt;=6 {
    draw_sprite(spr_boggleunder,0,312,172)
    if boggling=false &amp;&amp; boggled=false{
        draw_sprite_ext(spr_dice,5,312-20,172,1,1,0,c_white,1);
        draw_sprite_ext(spr_dice,5,312+20,172,1,1,90,c_white,1);
    } else if boggling=true &amp;&amp; boggled=false {
        draw_sprite_ext(spr_diceroll,rollindex,312,172,1,1,0,c_white,1);
    } else {
        draw_sprite_ext(dice1.sprite_index,dice1.image_index,dice1.x,dice1.y,1,1,dice1.image_angle,c_white,1);
        draw_sprite_ext(dice2.sprite_index,dice2.image_index,dice2.x,dice2.y,1,1,dice2.image_angle,c_white,1);
    }
    draw_sprite_ext(spr_boggle,0,312,172,bogglescale,bogglescale,0,c_white,1);
}

if boggleappear&lt;11 &amp;&amp; boggleappear&gt;0 {
    draw_sprite(spr_boggleappear,boggleappear,312,172);
}

draw_set_alpha(boggleappear/11) 
draw_set_halign(fa_left)
draw_set_valign(fa_top);
draw_set_font(fnt_baloo);
draw_set_color(make_color_rgb(160,134,134));
draw_text_ext(16,16,"Hold and release space to roll dice.",-1,128)

draw_set_alpha(blackalph);
draw_set_color(c_black);
draw_rectangle(-16,-16,656,376,false);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canfade=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
