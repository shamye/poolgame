<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>float =0;

current=0;
count=0;

shadowoffset=0;
textboxoff=150;
textboxalph=0;
questionalph=1;

destroy=false;

selected=1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dialogue


text[0]="&gt; You are placed into the cannon"
text[1]="You’re fired! Ahahaaha!"
text[2]="&gt; The cannon is fired"
text[3]="AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
text[4]="Don’t worry sonny this time I thought about safety and packed you a parachute!"
text[5]="Don’t you forget not to sue now!"
text[6]="Achieved Mark Owna's Ending"
text[7]="Press Spacebar to restart the game."
text[8]=-3

name[0]=""
name[1]="Mark"
name[2]=""
name[3]=obj_varhold.p_name;
name[4]="Mark"
name[5]="Mark"
name[6]=""
name[7]=""
name[8]=""

sound[0]=snd_wind;
sound[1]=snd_wind;
sound[2]=snd_wind;
sound[3]=snd_wind;
sound[4]=snd_wind;
sound[5]=snd_wind;
sound[6]=snd_wind;
sound[7]=snd_wind;
sound[8]=snd_wind;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inst=instance_create(0,0,obj_fadeout);
inst.alarm[0]=60;
inst.roomto=-2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>float+=irandom_range(10,30)/10;
shadowoffset=lerp(shadowoffset,8,0.1);


if destroy=false {
    textboxoff = lerp(textboxoff,0,0.2);
    textboxalph=1-textboxoff/150
} else {
    textboxoff = lerp(textboxoff,300,0.2);
    textboxalph=1-textboxoff/250
    
    if textboxoff&gt;249 {
        instance_destroy();
    }
}

if text[current]=-1 {
    questionalph=lerp(questionalph,1,0.1);
    if keyboard_check_pressed(vk_down) {
        audio_play_sound(snd_down,1,false);
        if selected&gt;1 {
            selected-=1;
        } else {
            selected=length[current];
        }
    }
    if keyboard_check_pressed(vk_up) {
        audio_play_sound(snd_up,1,false);
        if selected&lt;length[current] {
            selected+=1;
        } else {
            selected=1;
        }
    }
}

if text[current]=-3 {
    destroy=true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if destroy=false{
    audio_play_sound(sound[current],1,false);
    if count &lt; string_length(text[current]) {
        count=string_length(text[current])
    } else {
        if current+1 = array_length_1d(text) || text[current]=-3 {
            destroy=true;
        } else {
            if text[current+1]=-2 {
                current=choiceto[current+1,1];
            } else {
                if text[current]=-1
                {
                    current=choiceto[current,selected];
                } else {
                    current+=1
                }
            }
            count=0;
            textoffset=0;
            selected=1;
            questionalph=0;
            if name[current-1]!=name[current] {
                textboxoff=150;
                shadowoffset=0;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>count+=0.5;

draw_set_alpha(textboxalph);
var wave = degtorad(float);
draw_set_color(make_color_rgb(106,89,119));
draw_talkbubble(shadowoffset,shadowoffset+textboxoff/2,wave);
draw_roundrect_ext(84+shadowoffset,190+shadowoffset+textboxoff/2,255+shadowoffset,224+shadowoffset+textboxoff/2,48,48,false);
if text[current]=-1 {
    draw_set_color(merge_color(c_white,c_ltgray,questionalph));
    draw_talkbubble(0,0+textboxoff,wave);
    draw_roundrect_ext(84,190+textboxoff,255,224+textboxoff,48,48,false);
    
    draw_set_color(merge_color(make_color_rgb(61,59,63),make_color_rgb(61*1.5,59*1.5,63*1.5),questionalph));
    draw_set_font(fnt_coiny);
    draw_set_halign(fa_left);
    draw_set_valign(fa_middle);
} else {
    draw_set_color(c_white);
    draw_talkbubble(0,0+textboxoff,wave);
    draw_roundrect_ext(84,190+textboxoff,255,224+textboxoff,48,48,false);
    
    draw_set_color(make_color_rgb(61,59,63));
    draw_set_font(fnt_coiny);
    draw_set_halign(fa_left);
    draw_set_valign(fa_middle);
}
if text[current]=-1 {
    count=string_length(text[current-1])+1;
    draw_text(96,207+textboxoff,name[current-1]);

    draw_set_font(fnt_baloo);
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    draw_text_ext(119,246+textboxoff,string_copy(text[current-1],0,count),-1,397);
    
    draw_set_alpha(textboxalph);
    for (var i=1; i&lt;=length[current]; i++) {
        if selected=i {
            draw_set_color(make_color_rgb(106,89,119));
            draw_roundrect_ext(300+shadowoffset,0+360-72*i+textboxoff+shadowoffset,620+shadowoffset,64+360-72*i+textboxoff+shadowoffset,48,48,false);
            draw_set_color(make_color_rgb(61,59,63));
            draw_roundrect_ext(300,0+360-72*i+textboxoff,620,64+360-72*i+textboxoff,48,48,false);
            draw_set_color(c_white);
            draw_text_ext(320,32+360-72*i+textboxoff,choice[current,i],-1,260);
        } else {
            draw_set_color(make_color_rgb(106,89,119));
            draw_roundrect_ext(320+shadowoffset,0+360-72*i+textboxoff+shadowoffset,620+shadowoffset,64+360-72*i+textboxoff+shadowoffset,48,48,false);
            draw_set_color(c_white);
            draw_roundrect_ext(320,0+360-72*i+textboxoff,620,64+360-72*i+textboxoff,48,48,false);
            draw_set_color(make_color_rgb(61,59,63));
            draw_text_ext(340,32+360-72*i+textboxoff,choice[current,i],-1,260);
        }
    }
} else {
    draw_text(96,207+textboxoff,name[current]);
    
    draw_set_font(fnt_baloo);
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    draw_text_ext(119,246+textboxoff,string_copy(text[current],0,count),-1,397);
}


draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="90">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if destroy=false{
    audio_play_sound(sound[current],1,false);
    if count &lt; string_length(text[current]) {
        count=string_length(text[current])
    } else {
        if current+1 = array_length_1d(text) || text[current]=-3 {
            destroy=true;
        } else {
            if text[current+1]=-2 {
                current=choiceto[current+1,1];
            } else {
                if text[current]=-1
                {
                    current=choiceto[current,selected];
                } else {
                    current+=1
                }
            }
            count=0;
            textoffset=0;
            selected=1;
            questionalph=0;
            if name[current-1]!=name[current] {
                textboxoff=150;
                shadowoffset=0;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if destroy=false{
    audio_play_sound(sound[current],1,false);
    if count &lt; string_length(text[current]) {
        count=string_length(text[current])
    } else {
        if current+1 = array_length_1d(text) || text[current]=-3 {
            destroy=true;
        } else {
            if text[current+1]=-2 {
                current=choiceto[current+1,1];
            } else {
                if text[current]=-1
                {
                    current=choiceto[current,selected];
                } else {
                    current+=1
                }
            }
            count=0;
            textoffset=0;
            selected=1;
            questionalph=0;
            if name[current-1]!=name[current] {
                textboxoff=150;
                shadowoffset=0;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
