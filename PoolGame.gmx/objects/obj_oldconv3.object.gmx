<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>float =0;

current=0;
count=0;

shadowoffset=0;
textboxoff=150;
textboxalph=0;
questionalph=1;

destroy=false;

selected=1;
success=false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_all()
audio_sound_gain(bgm_old,1,0);
audio_play_sound(bgm_old,1,true);

player=instance_create(320-92,180-64,obj_player);
opp=instance_create(320+92,180-64,obj_old);

///Dialogue
text[0]="I’m back!"
text[1]="Welcome back dearie!"
text[2]="What took you so long? Did you spend all of that time buying juice?"
text[3]="No! I… wait actually.. I mean.."
text[4]="Oh no I couldn’t have possibly have done that grandpa. As you can see I am not able to swim."
text[5]="Could you please… hand me the propeller so I can buy some juice?"
text[6]="Ha! This time I almost fell for it. Pretty convincing kiddo."
text[7]="Oh I don’t think I could do that. After all you remember what happened last time don’t you?"
text[8]="Am I almost done here? I think you’ve embarrassed me enough for one day."
text[9]="You’ve done such a good job today that I think we can’t let you off early."
text[10]="Sweet thank you!"
text[11]="After you do one more favor for us."
text[12]="Ugh.. So close yet so far."
text[13]="Alright kid, what I need you to do is answer a few questions."
text[14]="That’s it? Easy peasy!"
text[15]="You sure about that kiddo? Well I guess it’s time to find out."
text[16]="I’m ready!"
text[17]="If you were to take us out to breakfast where would we go?"
text[18]=-1
text[19]="My my I guess you really do know how to treat us."
text[20]="A diner is perfect! Bright and early at six in the morning."
text[21]="So can I have the propeller now that I answered your question?"
text[22]="Not so fast, I said a few questions didn’t I?"
text[23]="Fine, what’s the next one?"
text[24]="What would you offer us if we had sore throats?"
text[25]=-1
text[26]="Why orange juice?"
text[27]="Well if you are sick then you are going to need more vitamin c to feel better right?"
text[28]="No no no, you’ve got it all wrong! I said sore throat."
text[29]="Orange juice is too acidic for a sore throat, you’d only make things worse!"
text[30]="It was a good try kiddo."
text[31]="How could I mess this up? I need some time to clear my mind."
text[32]=-3
text[33]="I love yogurt! I eat it every morning!"
text[34]="Yogurt always soothes my throat when it’s acting up. Good thinking there kiddo!"
text[35]="Are we almost done yet?"
text[36]="Just one more question!"
text[37]="Finally!"
text[38]="Let’s say you some old coots thought you would make good company."
text[39]="What would you say if they asked you to come over from time to time and offered to bake desserts with you and their grandkids."
text[40]=-1
// text[41]="Alright! It’s settled then! Welcome aboard kiddo."
text[41]=-3
text[42]="Just grab onto each of our hands and we’ll propel you back to shore."
text[43]="Just promise me one thing."
text[44]="What is it?"
text[45]="Promise me that we will not make juice together."
text[46]=-3
text[47]="Oh my I don’t think I could eat that much!"
text[48]="I may be skin and bones, but it’s not because I want more to eat!"
text[49]="But what if I’m really really hungry!"
text[50]="Then you get seconds dearie. No need to take us out to a buffet."
text[51]="Especially if they don’t serve oatmeal!"
text[52]="Why don’t you take a lap kiddo, you might need it to clear your head."
text[53]="Oh.. alright then."
text[54]=-3

choice[18,1]="A family diner!"
choice[18,2]="An all you can eat buffet!"
choiceto[18,1]=19
choiceto[18,2]=47
length[18]=2;

choice[25,1]="Orange Juice!"
choice[25,2]="Yogurt!"
choiceto[25,1]=26
choiceto[25,2]=33
length[25]=2;

choice[40,1]="I would like that very much."
choiceto[40,1]=41
length[40]=1;

name[0]=obj_varhold.p_name;
name[1]="Tina"
name[2]="Damon"
name[3]=obj_varhold.p_name;
name[4]=obj_varhold.p_name;
name[5]=obj_varhold.p_name;
name[6]="Tina"
name[7]="Damon"
name[8]=obj_varhold.p_name;
name[9]="Tina"
name[10]=obj_varhold.p_name;
name[11]="Tina"
name[12]=obj_varhold.p_name;
name[13]="Damon"
name[14]=obj_varhold.p_name;
name[15]="Tina"
name[16]=obj_varhold.p_name;
name[17]="Tina"
name[18]=""
name[19]="Damon"
name[20]="Tina"
name[21]=obj_varhold.p_name;
name[22]="Damon"
name[23]=obj_varhold.p_name;
name[24]="Damon"
name[25]=""
name[26]="Tina"
name[27]=obj_varhold.p_name;
name[28]="Damon"
name[29]="Tina"
name[30]="Damon"
name[31]=obj_varhold.p_name;
name[32]=""
name[33]="Tina"
name[34]="Damon"
name[35]=obj_varhold.p_name;
name[36]="Damon"
name[37]=obj_varhold.p_name;
name[38]="Tina"
name[39]="Tina"
name[40]=""
name[41]="Damon"
name[42]="Tina"
name[43]=obj_varhold.p_name;
name[44]="Damon"
name[45]=obj_varhold.p_name;
name[46]=""
name[47]="Tina"
name[48]="Damon"
name[49]=obj_varhold.p_name;
name[50]="Tina"
name[51]="Damon"
name[52]="Tina"
name[53]=obj_varhold.p_name;
name[54]=""

sound[0]=snd_wind;
sound[1]=snd_wind;
sound[2]=snd_wind;
sound[3]=snd_wind;
sound[4]=snd_wind;
sound[5]=snd_wind;
sound[6]=snd_wind;
sound[7]=snd_wind;
sound[8]=snd_wind;
sound[9]=snd_wind;
sound[10]=snd_wind;
sound[11]=snd_wind;
sound[12]=snd_wind;
sound[13]=snd_wind;
sound[14]=snd_wind;
sound[15]=snd_wind;
sound[16]=snd_wind;
sound[17]=snd_wind;
sound[18]=snd_wind;
sound[19]=snd_wind;
sound[20]=snd_wind;
sound[21]=snd_wind;
sound[22]=snd_wind;
sound[23]=snd_wind;
sound[24]=snd_wind;
sound[25]=snd_wind;
sound[26]=snd_wind;
sound[27]=snd_wind;
sound[28]=snd_wind;
sound[29]=snd_wind;
sound[30]=snd_wind;
sound[31]=snd_wind;
sound[32]=snd_wind;
sound[33]=snd_wind;
sound[34]=snd_wind;
sound[35]=snd_wind;
sound[36]=snd_wind;
sound[37]=snd_wind;
sound[38]=snd_wind;
sound[39]=snd_wind;
sound[40]=snd_wind;
sound[41]=snd_wind;
sound[42]=snd_wind;
sound[43]=snd_wind;
sound[44]=snd_wind;
sound[45]=snd_wind;
sound[46]=snd_wind;
sound[47]=snd_wind;
sound[48]=snd_wind;
sound[49]=snd_wind;
sound[50]=snd_wind;
sound[51]=snd_wind;
sound[52]=snd_wind;
sound[53]=snd_wind;
sound[54]=snd_wind;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inst=instance_create(0,0,obj_fadeout);
inst.alarm[0]=60;
if success=true{
    inst.roomto=roo_oldend;
    obj_varhold.oldprog+=1;
} else {
    inst.roomto=roo_boardtest;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if current&gt;40 &amp;&amp; current&lt;46 then {success=true}

float+=irandom_range(10,30)/10;
shadowoffset=lerp(shadowoffset,8,0.1);


if destroy=false {
    textboxoff = lerp(textboxoff,0,0.2);
    textboxalph=1-textboxoff/150
} else {
    textboxoff = lerp(textboxoff,300,0.2);
    textboxalph=1-textboxoff/250
    
    if textboxoff&gt;249 {
        instance_destroy();
    }
}

if text[current]=-1 {
    questionalph=lerp(questionalph,1,0.1);
    if keyboard_check_pressed(vk_down) {
        audio_play_sound(snd_down,1,false);
        if selected&gt;1 {
            selected-=1;
        } else {
            selected=length[current];
        }
    }
    if keyboard_check_pressed(vk_up) {
        audio_play_sound(snd_up,1,false);
        if selected&lt;length[current] {
            selected+=1;
        } else {
            selected=1;
        }
    }
}

if text[current]=-3 {
    destroy=true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if destroy=false{
    audio_play_sound(sound[current],1,false);
    if count &lt; string_length(text[current]) {
        count=string_length(text[current])
    } else {
        if current+1 = array_length_1d(text) || text[current]=-3 {
            destroy=true;
        } else {
            if text[current+1]=-2 {
                current=choiceto[current+1,1];
            } else {
                if text[current]=-1
                {
                    current=choiceto[current,selected];
                } else {
                    current+=1
                }
            }
            count=0;
            textoffset=0;
            selected=1;
            questionalph=0;
            if name[current-1]!=name[current] {
                textboxoff=150;
                shadowoffset=0;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>count+=0.5;

draw_set_alpha(textboxalph);
var wave = degtorad(float);
draw_set_color(make_color_rgb(106,89,119));
draw_talkbubble(shadowoffset,shadowoffset+textboxoff/2,wave);
draw_roundrect_ext(84+shadowoffset,190+shadowoffset+textboxoff/2,255+shadowoffset,224+shadowoffset+textboxoff/2,48,48,false);
if text[current]=-1 {
    draw_set_color(merge_color(c_white,c_ltgray,questionalph));
    draw_talkbubble(0,0+textboxoff,wave);
    draw_roundrect_ext(84,190+textboxoff,255,224+textboxoff,48,48,false);
    
    draw_set_color(merge_color(make_color_rgb(61,59,63),make_color_rgb(61*1.5,59*1.5,63*1.5),questionalph));
    draw_set_font(fnt_coiny);
    draw_set_halign(fa_left);
    draw_set_valign(fa_middle);
} else {
    draw_set_color(c_white);
    draw_talkbubble(0,0+textboxoff,wave);
    draw_roundrect_ext(84,190+textboxoff,255,224+textboxoff,48,48,false);
    
    draw_set_color(make_color_rgb(61,59,63));
    draw_set_font(fnt_coiny);
    draw_set_halign(fa_left);
    draw_set_valign(fa_middle);
}
if text[current]=-1 {
    count=string_length(text[current-1])+1;
    draw_text(96,207+textboxoff,name[current-1]);

    draw_set_font(fnt_baloo);
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    draw_text_ext(119,246+textboxoff,string_copy(text[current-1],0,count),-1,397);
    
    draw_set_alpha(textboxalph);
    for (var i=1; i&lt;=length[current]; i++) {
        if selected=i {
            draw_set_color(make_color_rgb(106,89,119));
            draw_roundrect_ext(300+shadowoffset,0+360-72*i+textboxoff+shadowoffset,620+shadowoffset,64+360-72*i+textboxoff+shadowoffset,48,48,false);
            draw_set_color(make_color_rgb(61,59,63));
            draw_roundrect_ext(300,0+360-72*i+textboxoff,620,64+360-72*i+textboxoff,48,48,false);
            draw_set_color(c_white);
            draw_text_ext(320,32+360-72*i+textboxoff,choice[current,i],-1,260);
        } else {
            draw_set_color(make_color_rgb(106,89,119));
            draw_roundrect_ext(320+shadowoffset,0+360-72*i+textboxoff+shadowoffset,620+shadowoffset,64+360-72*i+textboxoff+shadowoffset,48,48,false);
            draw_set_color(c_white);
            draw_roundrect_ext(320,0+360-72*i+textboxoff,620,64+360-72*i+textboxoff,48,48,false);
            draw_set_color(make_color_rgb(61,59,63));
            draw_text_ext(340,32+360-72*i+textboxoff,choice[current,i],-1,260);
        }
    }
} else {
    draw_text(96,207+textboxoff,name[current]);
    
    draw_set_font(fnt_baloo);
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    draw_text_ext(119,246+textboxoff,string_copy(text[current],0,count),-1,397);
}


draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="90">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if destroy=false{
    audio_play_sound(sound[current],1,false);
    if count &lt; string_length(text[current]) {
        count=string_length(text[current])
    } else {
        if current+1 = array_length_1d(text) || text[current]=-3 {
            destroy=true;
        } else {
            if text[current+1]=-2 {
                current=choiceto[current+1,1];
            } else {
                if text[current]=-1
                {
                    current=choiceto[current,selected];
                } else {
                    current+=1
                }
            }
            count=0;
            textoffset=0;
            selected=1;
            questionalph=0;
            if name[current-1]!=name[current] {
                textboxoff=150;
                shadowoffset=0;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if destroy=false{
    audio_play_sound(sound[current],1,false);
    if count &lt; string_length(text[current]) {
        count=string_length(text[current])
    } else {
        if current+1 = array_length_1d(text) || text[current]=-3 {
            destroy=true;
        } else {
            if text[current+1]=-2 {
                current=choiceto[current+1,1];
            } else {
                if text[current]=-1
                {
                    current=choiceto[current,selected];
                } else {
                    current+=1
                }
            }
            count=0;
            textoffset=0;
            selected=1;
            questionalph=0;
            if name[current-1]!=name[current] {
                textboxoff=150;
                shadowoffset=0;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
